name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install frontend dependencies
        working-directory: web_interface/frontend
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Build frontend
        working-directory: web_interface/frontend
        env:
          REACT_APP_API_URL: /api
          PUBLIC_URL: /LLM-R-D
          REACT_APP_GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Create deployment structure
        run: |
          mkdir -p _site
          cp -r web_interface/frontend/build/* _site/
          
          # Create a simple API mock for demo
          mkdir -p _site/api/v1
          echo '{"message": "LLM Optimization Platform", "status": "running", "version": "1.0.0"}' > _site/api/v1/health
          echo '{"models": [{"id": "gemini-1.5-flash", "name": "Gemini 1.5 Flash", "provider": "Google", "status": "available"}]}' > _site/api/v1/models

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4